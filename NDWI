/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var aoi = 
    /* color: #bf04c2 */
    /* shown: false */
    /* displayProperties: [
      {
        "type": "rectangle"
      }
    ] */
    ee.Geometry.Polygon(
        [[[88.44231545149391, 22.594954784166355],
          [88.44231545149391, 22.56690002117998],
          [88.48385750471657, 22.56690002117998],
          [88.48385750471657, 22.594954784166355]]], null, false);
/***** End of imports. If edited, may not auto-convert in the playground. *****/


// Area of interest


// Zoom to area of interest
Map.centerObject(aoi);
Map.addLayer(aoi);


// Load Sentinel-2 data

var startDate = '2022-12-01';
var endDate = '2022-12-31';

// Returns all the images between the start date and the end date
// taken on the area of interest
var sentinelImageCollection = ee.ImageCollection('COPERNICUS/S2')
                  .filterBounds(aoi)
                  .filterDate(startDate, endDate);

print("Number of images = ", sentinelImageCollection.size());

// We select the image with the smallest cloudy pixel percentage
var sentinelImage = sentinelImageCollection.sort('CLOUDY_PIXEL_PERCENTAGE')
    .first()
    .clip(aoi);

print("Sentinel image taken at = ", sentinelImage.date());

// Visualize using RGB
Map.addLayer(sentinelImage, {min: 0.0, max: 2000, bands: ['B4', 'B3', 'B2']}, 'RGB');

// Visualize using NDWI
var ndwi = sentinelImage.normalizedDifference(['B3', 'B8']).rename('NDWI');
Map.addLayer(ndwi, {palette: ['red', 'yellow', 'green', 'cyan', 'blue']}, 'NDWI');

// Calculate the area of our region of interest
var aoiArea = ee.Image.pixelArea().divide(1e6).reduceRegion({
    reducer: ee.Reducer.sum(),
    geometry: aoi,
    scale: 10,
}).get('area');
print('AOI area (km2):', aoiArea);

// Create NDWI mask
var ndwiThreshold = ndwi.gte(0.0);
var ndwiMask = ndwiThreshold.updateMask(ndwiThreshold);
Map.addLayer(ndwiThreshold, {palette:['black','white']}, 'NDWI Binary Mask');
Map.addLayer(ndwiMask, {palette:['blue']}, 'NDWI Mask');

// We can now calculate the masked areas pixel area
var ndwiPixelArea = ee.Image.pixelArea().addBands(ndwiMask.select('NDWI')).divide(1e6).reduceRegion({
    reducer: ee.Reducer.sum().group(1),
    geometry: aoi,
    scale: 10,
    bestEffort: true
});

var list = ee.List(ee.Dictionary(ndwiPixelArea).get('groups'));
var group0 = ee.Dictionary(list.get(0));
var ndwiWaterArea = ee.Number(group0.get('sum')).float();
print("Water area (km2):", ndwiWaterArea);

var waterRatio = ndwiWaterArea.divide(aoiArea);
print("Water ratio from area:", waterRatio);
